{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\PokemonApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n// Search cards by name\nexport function filterName() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (keyword !== '') {\n    return arr.filter(function (item) {\n      return item.name.toLowerCase().includes(keyword.toLowerCase());\n    });\n  }\n\n  return arr;\n} // Get and filter sets by series\n\nexport function availableSeries() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var allSeries = [];\n  arr.forEach(function (item) {\n    return allSeries.push(item.series);\n  });\n\n  var uniqueSeries = _toConsumableArray(new Set(allSeries));\n\n  uniqueSeries.sort(function (a, b) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  });\n  return uniqueSeries;\n}\nexport function filterSeries() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (value !== '') {\n    return arr.filter(function (item) {\n      return item.series === value;\n    });\n  }\n\n  return arr;\n}","map":{"version":3,"sources":["C:\\Users\\toshÄ±ba\\Downloads\\PokemonApp\\src\\selectors\\index.js"],"names":["filterName","arr","keyword","filter","item","name","toLowerCase","includes","availableSeries","allSeries","forEach","push","series","uniqueSeries","Set","sort","a","b","filterSeries","value"],"mappings":";AAAA;AACA,OAAO,SAASA,UAAT,GAA4C;AAAA,MAAxBC,GAAwB,uEAAlB,EAAkB;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAClD,MAAGA,OAAO,KAAK,EAAf,EAAmB;AAClB,WAAOD,GAAG,CAACE,MAAJ,CAAW,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAkCL,OAAO,CAACI,WAAR,EAAlC,CAAJ;AAAA,KAAf,CAAP;AACA;;AACD,SAAOL,GAAP;AACA,C,CAED;;AACA,OAAO,SAASO,eAAT,GAAmC;AAAA,MAAVP,GAAU,uEAAJ,EAAI;AACzC,MAAIQ,SAAS,GAAG,EAAhB;AACCR,EAAAA,GAAG,CAACS,OAAJ,CAAY,UAAAN,IAAI;AAAA,WAAIK,SAAS,CAACE,IAAV,CAAeP,IAAI,CAACQ,MAApB,CAAJ;AAAA,GAAhB;;AAEA,MAAIC,YAAY,sBAAO,IAAIC,GAAJ,CAAQL,SAAR,CAAP,CAAhB;;AACAI,EAAAA,YAAY,CAACE,IAAb,CAAkB,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC1B,QAAGD,CAAC,GAAGC,CAAP,EAAU,OAAO,CAAC,CAAR;AACV,QAAGD,CAAC,GAAGC,CAAP,EAAU,OAAO,CAAP;AACV,WAAO,CAAP;AACA,GAJD;AAKA,SAAOJ,YAAP;AACD;AAED,OAAO,SAASK,YAAT,GAA4C;AAAA,MAAtBjB,GAAsB,uEAAhB,EAAgB;AAAA,MAAZkB,KAAY,uEAAJ,EAAI;;AAClD,MAAGA,KAAK,KAAK,EAAb,EAAiB;AAChB,WAAOlB,GAAG,CAACE,MAAJ,CAAW,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACQ,MAAL,KAAgBO,KAApB;AAAA,KAAf,CAAP;AACA;;AACD,SAAOlB,GAAP;AACA","sourcesContent":["// Search cards by name\nexport function filterName(arr = [], keyword = '') {\n\tif(keyword !== '') {\n\t\treturn arr.filter(item => item.name.toLowerCase().includes( keyword.toLowerCase() ));\n\t}\n\treturn arr;\n}\n\n// Get and filter sets by series\nexport function availableSeries(arr = []) {\n\tlet allSeries = [];\n  arr.forEach(item => allSeries.push(item.series));\n  \n  let uniqueSeries = [...new Set(allSeries)];\n  uniqueSeries.sort((a,b) => {\n  \tif(a < b) return -1;\n  \tif(a > b) return 1;\n  \treturn 0;\n  });\n  return uniqueSeries;\n}\n\nexport function filterSeries(arr = [], value = '') {\n\tif(value !== '') {\n\t\treturn arr.filter(item => item.series === value );\n\t}\n\treturn arr;\n}"]},"metadata":{},"sourceType":"module"}