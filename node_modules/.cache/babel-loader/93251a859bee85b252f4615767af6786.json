{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tosh\\u0131ba\\\\Downloads\\\\poketrade2-master\\\\src\\\\components\\\\Fetch.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DisplayError from './DisplayError';\nimport * as actionCreators from '../actions';\n\nvar Fetch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fetch, _Component);\n\n  function Fetch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Fetch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Fetch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.fetchPromise =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var url, query, code, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _this.props.type;\n              _context.next = _context.t0 === 'sets' ? 3 : _context.t0 === 'cards' ? 5 : 9;\n              break;\n\n            case 3:\n              url = 'https://api.pokemontcg.io/v1/sets';\n              return _context.abrupt(\"break\", 10);\n\n            case 5:\n              query = new URLSearchParams(_this.props.query);\n              code = query.get('setCode');\n              url = \"https://api.pokemontcg.io/v1/cards?setCode=\".concat(code);\n              return _context.abrupt(\"break\", 10);\n\n            case 9:\n              return _context.abrupt(\"break\", 10);\n\n            case 10:\n              _context.next = 12;\n              return fetch(url);\n\n            case 12:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 16;\n              return res.json();\n\n            case 16:\n              json = _context.sent;\n              return _context.abrupt(\"return\", json);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Fetch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.loadingData(true);\n      this.props.resetFilter(this.props.type); // Call for and save data\n\n      this.fetchPromise().then(function (json) {\n        _this2.props.storeData(json);\n\n        _this2.props.loadingData(false);\n      }).catch(function (err) {\n        _this2.props.saveErrorMessage('Sorry, fetching failed');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.errorMessage) {\n        return React.createElement(DisplayError, {\n          message: this.props.errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      return this.props.render(this.props);\n    }\n  }]);\n\n  return Fetch;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n}\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(Fetch);","map":{"version":3,"sources":["C:\\Users\\toshÄ±ba\\Downloads\\poketrade2-master\\src\\components\\Fetch.js"],"names":["React","Component","connect","bindActionCreators","DisplayError","actionCreators","Fetch","fetchPromise","props","type","url","query","URLSearchParams","code","get","fetch","res","ok","json","loadingData","resetFilter","then","storeData","catch","err","saveErrorMessage","errorMessage","render","mapDispatchToProps","dispatch","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,cAAZ,MAAgC,YAAhC;;IAEMC,K;;;;;;;;;;;;;;;;;UAEJC,Y;;;;6BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGN,MAAKC,KAAL,CAAWC,IAHL;AAAA,8CAIN,MAJM,uBAON,OAPM;AAAA;;AAAA;AAKTC,cAAAA,GAAG,GAAG,mCAAN;AALS;;AAAA;AAQHC,cAAAA,KARG,GAQK,IAAIC,eAAJ,CAAoB,MAAKJ,KAAL,CAAWG,KAA/B,CARL;AASHE,cAAAA,IATG,GASIF,KAAK,CAACG,GAAN,CAAU,SAAV,CATJ;AAUTJ,cAAAA,GAAG,wDAAiDG,IAAjD,CAAH;AAVS;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAgBKE,KAAK,CAACL,GAAD,CAhBV;;AAAA;AAgBPM,cAAAA,GAhBO;;AAAA,mBAkBVA,GAAG,CAACC,EAlBM;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAmBQD,GAAG,CAACE,IAAJ,EAnBR;;AAAA;AAmBLA,cAAAA,IAnBK;AAAA,+CAoBJA,IApBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAwBK;AAAA;;AAClB,WAAKV,KAAL,CAAWW,WAAX,CAAuB,IAAvB;AACA,WAAKX,KAAL,CAAWY,WAAX,CAAuB,KAAKZ,KAAL,CAAWC,IAAlC,EAFkB,CAIlB;;AACA,WAAKF,YAAL,GACGc,IADH,CACQ,UAAAH,IAAI,EAAI;AACZ,QAAA,MAAI,CAACV,KAAL,CAAWc,SAAX,CAAqBJ,IAArB;;AACA,QAAA,MAAI,CAACV,KAAL,CAAWW,WAAX,CAAuB,KAAvB;AACD,OAJH,EAKGI,KALH,CAKS,UAAAC,GAAG,EAAI;AACZ,QAAA,MAAI,CAAChB,KAAL,CAAWiB,gBAAX,CAA4B,wBAA5B;AACD,OAPH;AAQD;;;6BAEQ;AACP,UAAG,KAAKjB,KAAL,CAAWkB,YAAd,EAA4B;AAC1B,eAAO,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWkB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO,KAAKlB,KAAL,CAAWmB,MAAX,CAAmB,KAAKnB,KAAxB,CAAP;AACD;;;;EA9CiBP,S;;AAiDpB,SAAS2B,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO1B,kBAAkB,CAACE,cAAD,EAAiBwB,QAAjB,CAAzB;AACD;;AAED,eAAe3B,OAAO,CACpB,UAAA4B,KAAK;AAAA,SAAIA,KAAJ;AAAA,CADe,EAEpBF,kBAFoB,CAAP,CAGbtB,KAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DisplayError from './DisplayError';\nimport * as actionCreators from '../actions';\n\nclass Fetch extends Component {\n\n  fetchPromise = async () => {\n    // Remote address\n    let url;\n    switch(this.props.type) {\n      case 'sets':\n        url = 'https://api.pokemontcg.io/v1/sets';\n        break;\n      case 'cards':\n        const query = new URLSearchParams(this.props.query);\n        const code = query.get('setCode');\n        url = `https://api.pokemontcg.io/v1/cards?setCode=${code}`;\n        break;\n      default:\n        break;\n    }\n    \n    const res = await fetch(url);\n\n    if(res.ok) {\n      const json = await res.json();\n      return json;\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadingData(true)\n    this.props.resetFilter(this.props.type);\n\n    // Call for and save data\n    this.fetchPromise()\n      .then(json => {\n        this.props.storeData(json);\n        this.props.loadingData(false);\n      })\n      .catch(err => {\n        this.props.saveErrorMessage('Sorry, fetching failed');\n      });\n  }\n\n  render() {\n    if(this.props.errorMessage) {\n      return <DisplayError message={this.props.errorMessage} />\n    }\n    return this.props.render( this.props );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n}\n\nexport default connect(\n  state => state,\n  mapDispatchToProps\n)(Fetch);"]},"metadata":{},"sourceType":"module"}